/*
    Arquitetura de Computadores I - Guia_04.txt
    793605 - Caio Faria Diniz
*/

// ------- Questão 1 ------- //

1.)
a) x' . ( y'+ z )'
+---+---+---+---+---+-----==--+-----------+
| x | y | z | y'| x'| (y'+ z)'| x'.(y'+z)'|
+---+---+---+---+---+---------+-----------+
| 0 | 0 | 0 | 1 | 1 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 0 | 0 | 1 | 1 | 1 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 0 | 1 | 0 | 0 | 1 |   1     |     1     |
+---+---+---+---+---+---------+-----------+
| 0 | 1 | 1 | 0 | 1 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 1 | 0 | 0 | 1 | 0 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 1 | 0 | 1 | 1 | 0 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 1 | 1 | 0 | 0 | 0 |   1     |     0     |
+---+---+---+---+---+---------+-----------+
| 1 | 1 | 1 | 0 | 0 |   0     |     0     |
+---+---+---+---+---+---------+-----------+

module fxyz ( output s, 
              input  x, y, z); 
 assign s = ~x & ~(~y | z);  
endmodule // fxyz 

b) ( x' + y' )' . z
+---+---+---+---+---+---------+-----------+
| x | y | z | y'| x'|(x'+ y')'|(x'+ y')'.z|
+---+---+---+---+---+---------+-----------+
| 0 | 0 | 0 | 1 | 1 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 0 | 0 | 1 | 1 | 1 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 0 | 1 | 0 | 0 | 1 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 0 | 1 | 1 | 0 | 1 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 1 | 0 | 0 | 1 | 0 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 1 | 0 | 1 | 1 | 0 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 1 | 1 | 0 | 0 | 0 |   1     |     0     |
+---+---+---+---+---+---------+-----------+
| 1 | 1 | 1 | 0 | 0 |   0     |     0     |
+---+---+---+---+---+---------+-----------+


module fxyz ( output s, 
              input  x, y, z); 
 assign s = ~( ~x | ~y ) & z ;  
endmodule // fxyz 

c.) ( x . y' )' . z'
+---+---+---+---+---+---------+-----------+
| x | y | z | y'| z'| (x.y')' | (x.y')'.z'|
+---+---+---+---+---+---------+-----------+
| 0 | 0 | 0 | 1 | 1 |   1     |     1     |
+---+---+---+---+---+---------+-----------+
| 0 | 0 | 1 | 1 | 0 |   1     |     0     |
+---+---+---+---+---+---------+-----------+
| 0 | 1 | 0 | 0 | 1 |   1     |     1     |
+---+---+---+---+---+---------+-----------+
| 0 | 1 | 1 | 0 | 0 |   1     |     0     |
+---+---+---+---+---+---------+-----------+
| 1 | 0 | 0 | 1 | 1 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 1 | 0 | 1 | 1 | 0 |   0     |     0     |
+---+---+---+---+---+---------+-----------+
| 1 | 1 | 0 | 0 | 1 |   1     |     1     |
+---+---+---+---+---+---------+-----------+
| 1 | 1 | 1 | 0 | 0 |   1     |     0     |
+---+---+---+---+---+---------+-----------+

module fxyz ( output s, 
              input  x, y, z); 
 assign s = ~( x & ~y ) & ~z ;  
endmodule // fxyz 

d.) ( x' . y )' . z  
+---+---+---+---+-----------+-----------+
| x | y | z | x'|  (x'. y)' | (x'. y)'.z|
+---+---+---+---+-----------+-----------+
| 0 | 0 | 0 | 1 |     1     |     0     |
+---+---+---+---+-----------+-----------+
| 0 | 0 | 1 | 1 |     1     |     1     |
+---+---+---+---+-----------+-----------+
| 0 | 1 | 0 | 1 |     0     |     0     |
+---+---+---+---+-----------+-----------+
| 0 | 1 | 1 | 1 |     0     |     0     |
+---+---+---+---+-----------+-----------+
| 1 | 0 | 0 | 0 |     1     |     0     |
+---+---+---+---+-----------+-----------+
| 1 | 0 | 1 | 0 |     1     |     1     |
+---+---+---+---+-----------+-----------+
| 1 | 1 | 0 | 0 |     1     |     0     |
+---+---+---+---+-----------+-----------+
| 1 | 1 | 1 | 0 |     1     |     1     |
+---+---+---+---+-----------+-----------+

module fxyz ( output s, 
              input  x, y, z); 
 assign s = ~( ~x & y ) & z; 
endmodule // fxyz

e.) ( x' + y ) . ( y' + z )' 
+---+---+---+---+---+---+-------+-----------+------------------+
| x | y | z | x'| y'| z'| (x'+y)|  (y'+z)'  |  (x'+y).(y'+z)'  |
+---+---+---+---+---+---+-------+-----------+------------------+
| 0 | 0 | 0 | 1 | 1 | 1 |   1   |     0     |        0         |
+---+---+---+---+---+---+-------+-----------+------------------+
| 0 | 0 | 1 | 1 | 1 | 0 |   1   |     0     |        0         |
+---+---+---+---+---+---+-------+-----------+------------------+
| 0 | 1 | 0 | 1 | 0 | 1 |   1   |     0     |        0         |
+---+---+---+---+---+---+-------+-----------+------------------+
| 0 | 1 | 1 | 1 | 0 | 0 |   1   |     1     |        1         |
+---+---+---+---+---+---+-------+-----------+------------------+
| 1 | 0 | 0 | 0 | 1 | 1 |   0   |     0     |        0         |
+---+---+---+---+---+---+-------+-----------+------------------+
| 1 | 0 | 1 | 0 | 1 | 0 |   0   |     0     |        0         |
+---+---+---+---+---+---+-------+-----------+------------------+
| 1 | 1 | 0 | 0 | 0 | 1 |   1   |     0     |        0         |
+---+---+---+---+---+---+-------+-----------+------------------+
| 1 | 1 | 1 | 0 | 0 | 0 |   1   |     1     |        1         |
+---+---+---+---+---+---+-------+-----------+------------------+

module fxyz ( output s, 
              input  x, y, z); 
 assign s = ( ~x | y ) & ~( ~y & z ); 
endmodule // fxyz


// ------- Questão 2 ------- //

2.)	 
a.) x . ( x' + y )' = x . y'

	(x' + y)' = x . y'
	x . (x . y') =
	x . x . y' =
	x . y'

RESPOSTA: x . y'

module fxyz (output s1, output s2, input  x, y, z); 
 assign s1 = x & ( ~x | y ); 
 assign s2 =  x & ~y;
endmodule // fxyz 


b.) ( x'+ y ) + ( x' . y ) = 
    ( x'+ y ) + ( x' . y ) = x' + y  // segundo a lei da absorção que nos diz que A + (A . B) = A
	
RESPOSTA: x' + y

module fxyz (output s1, output s2, input  x, y, z); 
 assign s1 = ( ~x | y ) | ( ~x & y ); 
 assign s2 =  ~x | y; 
endmodule // fxyz 


c.) ( x' . y' )' . ( x + y ) 
  = ( x' . y' )' = x'' . y'' = x + y


    ( x + y ) . ( x + y ) = x + y // segundo a lei da idempotência nos diz que A . A = A 

RESPOSTA: x + y

module fxyz (output s1, output s2, input  x, y, z); 
 assign s1 = ~( ~x & ~y  ) & ( x | y ); 
 assign s2 =  x | y; 
endmodule // fxyz 


d.) ( x' . y )' + ( x' + y )' = 
    ( x' . y )' = x'' + y' = x . y' // aplicando as leis de De Morgan  //fazendo a substituição logo em sequência 
    (x + y') + (x . y') 
    (x + y') + (x . y')  = x + y' // aplicando a lei de absorção

RESPOSTA: x + y'

module fxyz (output s1, output s2, input  x, y, z); 
 assign s1 = ~( ~x & y ) | ~( ~x | y ); 
 assign s2 =  x | ~y; 
endmodule // fxyz 


e.) ( y + x' ) . ( y' + x )' = 
    (y' + x)' = y''. x' = y . x' // aplicando as leis de De Morgan   //fazendo a substituição logo em sequência
    (y + x') . (y . x')
    (y + x') . (y' + x)' = y . x' // aplicando a lei de absorção

RESPOSTA: y . x'
module fxyz (output s1, output s2, input  x, y, z); 
 assign s1 = ( y | ~x ) & ( ~y | x ); 
 assign s2 =  y & ~x; 
endmodule // fxyz 

// ------- Questão 3 ------- //

3.)
a) f (x,y,z)   = ∑ m ( 1, 5, 6, 7 )  

| x | y | z | f(x,y,z) |
|---|---|---|----------|
| 0 | 0 | 0 |    0     | // m0
| 0 | 0 | 1 |    1     | // m1*
| 0 | 1 | 0 |    0     | // m2
| 0 | 1 | 1 |    0     | // m3
| 1 | 0 | 0 |    0     | // m4
| 1 | 0 | 1 |    1     | // m5*
| 1 | 1 | 0 |    1     | // m6*
| 1 | 1 | 1 |    1     | // m7*

module SoP (output s, input  x, y, z); // mintermos 
 assign s = ( ~x &  ~y &  z) //1
          | (  x &  ~y &  z) //5
          | (  x &   y & ~z) //6
          | (  x &   y &  z) //7
          ; 
endmodule // SoP

b) f (x,y,z)   = ∑ m ( 2, 5, 6, 7 )  

| x | y | z | f(x,y,z) |
|---|---|---|----------|
| 0 | 0 | 0 |    0     | // m0
| 0 | 0 | 1 |    1     | // m1
| 0 | 1 | 0 |    0     | // m2*
| 0 | 1 | 1 |    0     | // m3
| 1 | 0 | 0 |    0     | // m4
| 1 | 0 | 1 |    1     | // m5*
| 1 | 1 | 0 |    1     | // m6*
| 1 | 1 | 1 |    1     | // m7*

module SoP (output s, input  x, y, z); // mintermos 
 assign s  =    ( ~x     &      y    &   ~z )  //2
                            | (    x     &   ~y  &       z ) //5
         	       | (    x     &      y    &   ~z ) //6
          	       | (    x   &      y    &       z ) //7
          ; 
endmodule // SoP

c) f (x,y,w,z) = ∑ m ( 1, 2, 3, 6, 7, 11, 15   ) 

| x | y | w | z | f(x,y,z) |
|---|---|---|---|----------|
| 0 | 0 | 0 | 0 |    0     | // m0
| 0 | 0 | 0 | 1 |    1     | // m1*
| 0 | 0 | 1 | 0 |    1     | // m2*
| 0 | 0 | 1 | 1 |    1     | // m3*
| 0 | 1 | 0 | 0 |    0     | // m4
| 0 | 1 | 0 | 1 |    0     | // m5
| 0 | 1 | 1 | 0 |    1     | // m6*
| 0 | 1 | 1 | 1 |    1     | // m7*
| 1 | 0 | 0 | 0 |    0     | // m8
| 1 | 0 | 0 | 1 |    0     | // m9
| 1 | 0 | 1 | 0 |    0     | // m10
| 1 | 0 | 1 | 1 |    1     | // m11*
| 1 | 1 | 0 | 0 |    0     | // m12
| 1 | 1 | 0 | 1 |    0     | // m13
| 1 | 1 | 1 | 0 |    0     | // m14
| 1 | 1 | 1 | 1 |    1     | // m15*

module SoP (output s, input  x, y, z); // mintermos 
 assign s = (~x & ~y & ~w &  z) //1
          | (~x & ~y &  w & ~z) //2
          | (~x &  y &  w &  z) //3
          | (~x &  y &  w & ~z) //6
          | ( x & ~y & ~w & ~z) //7
          | ( x & ~y &  w &  z) //11
          | ( x &  y &  w &  z) //15
          ; 
endmodule // SoP
 
d) f (x,y,w,z) = ∑ m ( 1,  2,   6,   8,   10,   12,   14  ) 

| x | y | w | z | f(x,y,z) |
|---|---|---|---|----------|
| 0 | 0 | 0 | 0 |    0     | // m0
| 0 | 0 | 0 | 1 |    1     | // m1*
| 0 | 0 | 1 | 0 |    1     | // m2*
| 0 | 0 | 1 | 1 |    0     | // m3
| 0 | 1 | 0 | 0 |    0     | // m4
| 0 | 1 | 0 | 1 |    0     | // m5
| 0 | 1 | 1 | 0 |    1     | // m6*
| 0 | 1 | 1 | 1 |    0     | // m7
| 1 | 0 | 0 | 0 |    1     | // m8*
| 1 | 0 | 0 | 1 |    0     | // m9
| 1 | 0 | 1 | 0 |    1     | // m10*
| 1 | 0 | 1 | 1 |    0     | // m11
| 1 | 1 | 0 | 0 |    1     | // m12*
| 1 | 1 | 0 | 1 |    0     | // m13
| 1 | 1 | 1 | 0 |    1     | // m14*
| 1 | 1 | 1 | 1 |    0     | // m15

module SoP (output s, input  x, y, z); // mintermos 
 assign s = (~x & ~y & ~w &  z) //1
          | (~x & ~y &  w & ~z) //2
          | (~x &  y &  w & ~z) //6
          | ( x & ~y & ~w & ~z) //8
          | ( x & ~y &  w & ~z) //10
          | ( x &  y & ~w & ~z) //12
          | ( x &  y &  w & ~z) //14
          ; 
endmodule // SoP

e) f (x,y,w,z) = ∑ m (  0, 2, 5, 7, 8, 11 )

| x | y | w | z | f(x,y,z) |
|---|---|---|---|----------|
| 0 | 0 | 0 | 0 |    1     | // m0*
| 0 | 0 | 0 | 1 |    0     | // m1
| 0 | 0 | 1 | 0 |    1     | // m2*
| 0 | 0 | 1 | 1 |    0     | // m3
| 0 | 1 | 0 | 0 |    0     | // m4
| 0 | 1 | 0 | 1 |    1     | // m5*
| 0 | 1 | 1 | 0 |    0     | // m6
| 0 | 1 | 1 | 1 |    1     | // m7*
| 1 | 0 | 0 | 0 |    1     | // m8*
| 1 | 0 | 0 | 1 |    0     | // m9
| 1 | 0 | 1 | 0 |    0     | // m10
| 1 | 0 | 1 | 1 |    1     | // m11*
| 1 | 1 | 0 | 0 |    0     | // m12
| 1 | 1 | 0 | 1 |    0     | // m13
| 1 | 1 | 1 | 0 |    0     | // m14
| 1 | 1 | 1 | 1 |    0     | // m15

module SoP (output s, input  x, y, z); // mintermos 
 assign s = (~x & ~y & ~w & ~z) //0
          | (~x & ~y &  w & ~z) //2
          | (~x &  y & ~w &  z) //5
          | (~x &  y &  w &  z) //7
          | ( x & ~y & ~w &  z) //8
          | ( x & ~y &  w &  z) //11
          ; 
endmodule // SoP


// ------- Questão 4 ------- //

4.)
a) F (X,Y,Z)   = π M ( 1, 2, 6, 7 )

| X | Y | Z | f(X,Y,Z) |
|---|---|---|----------|
| 0 | 0 | 0 |    1     | // m0
| 0 | 0 | 1 |    0     | // m1*
| 0 | 1 | 0 |    0     | // m2*
| 0 | 1 | 1 |    1     | // m3
| 1 | 0 | 0 |    1     | // m4
| 1 | 0 | 1 |    1     | // m5
| 1 | 1 | 0 |    0     | // m6*
| 1 | 1 | 1 |    0     | // m7*

module PoS (output S, input  X, Y, Z); // MAXTERMOS 
 assign S = ( X |  Y | ~Z) //1
          & ( X | ~Y |  Z) //2
          & (~X | ~Y |  Z) //6
          & (~X | ~Y | ~Z) //7
          ; 
endmodule // PoS

b) F (X,Y,Z)   = π M ( 0, 3, 4, 7 ) 

| X | Y | Z | f(X,Y,Z) |
|---|---|---|----------|
| 0 | 0 | 0 |    0     | // m0*
| 0 | 0 | 1 |    1     | // m1
| 0 | 1 | 0 |    1     | // m2
| 0 | 1 | 1 |    0     | // m3*
| 1 | 0 | 0 |    0     | // m4*
| 1 | 0 | 1 |    1     | // m5
| 1 | 1 | 0 |    1     | // m6
| 1 | 1 | 1 |    0     | // m7*

module PoS (output S, input  X, Y, Z); // MAXTERMOS 
 assign S = ( X |  Y |  Z) //0
          & ( X | ~Y | ~Z) //3
          & (~X |  Y |  Z) //4
          & (~X | ~Y | ~Z) //7
          ; 
endmodule // PoS

c) F (X,Y,W,Z) = π M ( 0, 1, 2, 4, 6, 8, 11, 12 )

| X | Y | W | Z | f(X,Y,W,Z) |
|---|---|---|---|------------|
| 0 | 0 | 0 | 0 |      0     | // m0*
| 0 | 0 | 0 | 1 |      0     | // m1*
| 0 | 0 | 1 | 0 |      0     | // m2*
| 0 | 0 | 1 | 1 |      1     | // m3
| 0 | 1 | 0 | 0 |      0     | // m4*
| 0 | 1 | 0 | 1 |      1     | // m5
| 0 | 1 | 1 | 0 |      0     | // m6*
| 0 | 1 | 1 | 1 |      1     | // m7
| 1 | 0 | 0 | 0 |      0     | // m8*
| 1 | 0 | 0 | 1 |      1     | // m9
| 1 | 0 | 1 | 0 |      1     | // m10
| 1 | 0 | 1 | 1 |      0     | // m11*
| 1 | 1 | 0 | 0 |      0     | // m12*
| 1 | 1 | 0 | 1 |      1     | // m13
| 1 | 1 | 1 | 0 |      1     | // m14
| 1 | 1 | 1 | 1 |      1     | // m15

module PoS (output S, input  X, Y, W, Z); // MAXTERMOS 
 assign S = ( X |  Y |  W |  Z) //0
          & ( X |  Y |  W | ~Z) //1
          & ( X |  Y | ~W |  Z) //2
          & ( X | ~Y |  W |  Z) //4
          & ( X | ~Y | ~W |  Z) //6
          & (~X |  Y |  W |  Z) //8
          & (~X |  Y | ~W | ~Z) //11
          & (~X | ~Y |  W |  Z) //12
          ; 
endmodule // PoS

d) F (X,Y,W,Z) = π M ( 1, 2, 4, 7, 8, 9, 15 )

| X | Y | W | Z | f(X,Y,W,Z) |
|---|---|---|---|------------|
| 0 | 0 | 0 | 0 |      1     | // m0
| 0 | 0 | 0 | 1 |      0     | // m1*
| 0 | 0 | 1 | 0 |      0     | // m2*
| 0 | 0 | 1 | 1 |      1     | // m3
| 0 | 1 | 0 | 0 |      0     | // m4*
| 0 | 1 | 0 | 1 |      1     | // m5
| 0 | 1 | 1 | 0 |      1     | // m6
| 0 | 1 | 1 | 1 |      0     | // m7*
| 1 | 0 | 0 | 0 |      0     | // m8*
| 1 | 0 | 0 | 1 |      0     | // m9*
| 1 | 0 | 1 | 0 |      1     | // m10
| 1 | 0 | 1 | 1 |      1     | // m11
| 1 | 1 | 0 | 0 |      1     | // m12
| 1 | 1 | 0 | 1 |      1     | // m13
| 1 | 1 | 1 | 0 |      1     | // m14
| 1 | 1 | 1 | 1 |      0     | // m15*

module PoS (output S, input  X, Y, W, Z); // MAXTERMOS 
 assign S = ( X |  Y |  W | ~Z) //1
          & ( X |  Y | ~W |  Z) //2
          & ( X | ~Y |  W |  Z) //4
          & ( X | ~Y | ~W | ~Z) //7
          & (~X |  Y |  W |  Z) //8
          & (~X |  Y |  W | ~Z) //9
          & (~X | ~Y | ~W | ~Z) //15
          ; 
endmodule // PoS

e) F (X,Y,W,Z) = π M ( 0, 1, 2, 4, 5, 10, 13 )

| X | Y | W | Z | f(X,Y,W,Z) |
|---|---|---|---|------------|
| 0 | 0 | 0 | 0 |      0     | // m0*
| 0 | 0 | 0 | 1 |      0     | // m1*
| 0 | 0 | 1 | 0 |      0     | // m2*
| 0 | 0 | 1 | 1 |      1     | // m3
| 0 | 1 | 0 | 0 |      0     | // m4*
| 0 | 1 | 0 | 1 |      0     | // m5*
| 0 | 1 | 1 | 0 |      1     | // m6
| 0 | 1 | 1 | 1 |      1     | // m7
| 1 | 0 | 0 | 0 |      1     | // m8
| 1 | 0 | 0 | 1 |      1     | // m9
| 1 | 0 | 1 | 0 |      0     | // m10*
| 1 | 0 | 1 | 1 |      1     | // m11
| 1 | 1 | 0 | 0 |      1     | // m12
| 1 | 1 | 0 | 1 |      0     | // m13*
| 1 | 1 | 1 | 0 |      1     | // m14
| 1 | 1 | 1 | 1 |      1     | // m15

module PoS (output S, input  X, Y, W, Z); // MAXTERMOS 
 assign S = (~X | ~Y | ~W | ~Z) //0
          & ( X |  Y |  W | ~Z) //1
          & ( X |  Y | ~W |  Z) //2
          & ( X | ~Y |  W |  Z) //4
          & ( X | ~Y |  W | ~Z) //5
          & (~X |  Y | ~W |  Z) //10
          & (~X | ~Y |  W | ~Z) //13
          ; 
endmodule // PoS

// ------- Questão 5 ------- //

5.) 

a.) SoP( x , y ) = (x.y') + (x.y)

    PoS( x , y ) = (X'+ Y') . (X'+ Y) . (X + Y)


b.) SoP( x , y ) = (x'.y) + (x.y) 

    PoS( x , y ) = (X'+Y) . (X + Y')


c.) SoP( x, y, z ) = (x'.y'.z') + (x'.y.z) + (x.y'.z') + (x.y'.z) + (x.y.z)

    PoS( x, y, z ) = (X'+Y'+Z) . (X'+Y+Z') . (X+Y+Z')


d.) SoP( x, y, z ) = (x'.y'.z') + (x'.y'.z) + ( x'.y.z') + (x.y'.z') + (x.y'.z) + (x.y.z')

    PoS( x, y, z ) = (X'+Y+Z') . (X+Y+Z')


e.) SoP( x, y, w, z ) =  (x'.y'.w'.z') + (x'.y'.w'.z) + (x'.y'.w.z) + (x'.y.w'.z) + (x'.y.w.z') + (x.y'.w'.z') 
                      + (x.y'.w'.z) + (x.y'.w.z') + (x.y.w'.z) + (x.y.w.z') + (x.y.w.z)

    PoS( x, y, w, z ) = (X'+Y'+W+Z) . (X'+Y+W'+Z) . (X'+Y+W+Z') . (X+Y'+W+Z) . (X+Y+W'+Z') . (X+Y+W+Z')


// ------- FIM ------- //